<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.db.mybatis.dao.RecordThirdPartMapper">
  <resultMap id="BaseResultMap" type="jp.db.mybatis.model.RecordThirdPart">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="companyName" jdbcType="VARCHAR" property="companyName" />
    <result column="scene" jdbcType="VARCHAR" property="scene" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="contactInformation" jdbcType="VARCHAR" property="contactInformation" />
    <result column="localContact" jdbcType="VARCHAR" property="localContact" />
    <result column="localContactInfo" jdbcType="VARCHAR" property="localContactInfo" />
    <result column="serverUrl" jdbcType="VARCHAR" property="serverUrl" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateCount" jdbcType="INTEGER" property="updateCount" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="jp.db.mybatis.model.RecordThirdPartWithBLOBs">
    <result column="testParam" jdbcType="LONGVARCHAR" property="testParam" />
    <result column="formalParam" jdbcType="LONGVARCHAR" property="formalParam" />
    <result column="comments" jdbcType="LONGVARCHAR" property="comments" />
  </resultMap>
  <sql id="Base_Column_List">
    uuid, company, companyName, scene, contact, contactInformation, localContact, localContactInfo, 
    serverUrl, account, username, password, createTime, updateCount, updateTime
  </sql>
  <sql id="Blob_Column_List">
    testParam, formalParam, comments
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from record_third_part
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from record_third_part
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="jp.db.mybatis.model.RecordThirdPartWithBLOBs">
    insert into record_third_part (uuid, company, companyName, 
      scene, contact, contactInformation, 
      localContact, localContactInfo, serverUrl, 
      account, username, password, 
      createTime, updateCount, updateTime, 
      testParam, formalParam, comments
      )
    values (#{uuid,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, 
      #{scene,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, #{contactInformation,jdbcType=VARCHAR}, 
      #{localContact,jdbcType=VARCHAR}, #{localContactInfo,jdbcType=VARCHAR}, #{serverUrl,jdbcType=VARCHAR}, 
      #{account,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateCount,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{testParam,jdbcType=LONGVARCHAR}, #{formalParam,jdbcType=LONGVARCHAR}, #{comments,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="jp.db.mybatis.model.RecordThirdPartWithBLOBs">
    insert into record_third_part
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="companyName != null">
        companyName,
      </if>
      <if test="scene != null">
        scene,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="contactInformation != null">
        contactInformation,
      </if>
      <if test="localContact != null">
        localContact,
      </if>
      <if test="localContactInfo != null">
        localContactInfo,
      </if>
      <if test="serverUrl != null">
        serverUrl,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateCount != null">
        updateCount,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="testParam != null">
        testParam,
      </if>
      <if test="formalParam != null">
        formalParam,
      </if>
      <if test="comments != null">
        comments,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="scene != null">
        #{scene,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="contactInformation != null">
        #{contactInformation,jdbcType=VARCHAR},
      </if>
      <if test="localContact != null">
        #{localContact,jdbcType=VARCHAR},
      </if>
      <if test="localContactInfo != null">
        #{localContactInfo,jdbcType=VARCHAR},
      </if>
      <if test="serverUrl != null">
        #{serverUrl,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateCount != null">
        #{updateCount,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="testParam != null">
        #{testParam,jdbcType=LONGVARCHAR},
      </if>
      <if test="formalParam != null">
        #{formalParam,jdbcType=LONGVARCHAR},
      </if>
      <if test="comments != null">
        #{comments,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="jp.db.mybatis.model.RecordThirdPartWithBLOBs">
    update record_third_part
    <set>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        companyName = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="scene != null">
        scene = #{scene,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="contactInformation != null">
        contactInformation = #{contactInformation,jdbcType=VARCHAR},
      </if>
      <if test="localContact != null">
        localContact = #{localContact,jdbcType=VARCHAR},
      </if>
      <if test="localContactInfo != null">
        localContactInfo = #{localContactInfo,jdbcType=VARCHAR},
      </if>
      <if test="serverUrl != null">
        serverUrl = #{serverUrl,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateCount != null">
        updateCount = #{updateCount,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="testParam != null">
        testParam = #{testParam,jdbcType=LONGVARCHAR},
      </if>
      <if test="formalParam != null">
        formalParam = #{formalParam,jdbcType=LONGVARCHAR},
      </if>
      <if test="comments != null">
        comments = #{comments,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="jp.db.mybatis.model.RecordThirdPartWithBLOBs">
    update record_third_part
    set company = #{company,jdbcType=VARCHAR},
      companyName = #{companyName,jdbcType=VARCHAR},
      scene = #{scene,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      contactInformation = #{contactInformation,jdbcType=VARCHAR},
      localContact = #{localContact,jdbcType=VARCHAR},
      localContactInfo = #{localContactInfo,jdbcType=VARCHAR},
      serverUrl = #{serverUrl,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateCount = #{updateCount,jdbcType=INTEGER},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      testParam = #{testParam,jdbcType=LONGVARCHAR},
      formalParam = #{formalParam,jdbcType=LONGVARCHAR},
      comments = #{comments,jdbcType=LONGVARCHAR}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="jp.db.mybatis.model.RecordThirdPart">
    update record_third_part
    set company = #{company,jdbcType=VARCHAR},
      companyName = #{companyName,jdbcType=VARCHAR},
      scene = #{scene,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      contactInformation = #{contactInformation,jdbcType=VARCHAR},
      localContact = #{localContact,jdbcType=VARCHAR},
      localContactInfo = #{localContactInfo,jdbcType=VARCHAR},
      serverUrl = #{serverUrl,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateCount = #{updateCount,jdbcType=INTEGER},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>